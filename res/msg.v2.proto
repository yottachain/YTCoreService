syntax = "proto2";
 
package pkt;

message ActiveCacheV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional group VNU=4{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;   
    }
}

message DownloadBlockInitReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional uint64 VBI=4;
}

message DownloadFileReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional string bucketname=4;
    optional string fileName=5;
    optional group VersionId=6{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;
    }
}

message DownloadObjectInitReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional bytes VHW=4;
}

message PreAllocNodeReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional uint32 count=4;
    repeated int32 excludes=5;
}

message QueryUserReqV2{
    repeated string pubkey=1;
    optional string username=2;
    optional int32 UserId = 3;
}

message SyncUserReq{
    repeated bytes pubkey=1;
    optional string username=2;
    optional int32 UserId = 3;
}

message RegUserReqV2{
    optional string pubKey=1;
    optional string username=2;
    optional string versionId=3;
}

message RegUserReqV3{
    repeated string pubKey=1;
    optional string username=2;
    optional string versionId=3;
}

message UploadBlockDBReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional uint32 id=4;
    optional group VNU=5{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;     
    }
    optional bytes VHP=6;
    optional bytes VHB=7;
    optional bytes KEU=8;
    optional bytes KED=9;
    optional uint64 originalSize=10;   
    optional bytes data=11;
}

message UploadBlockDupReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional uint32 id=4;
    optional group VNU=5{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;     
    }
    optional bytes VHP=6;
    optional bytes VHB=7;
    optional bytes KEU=8;
    optional uint64 originalSize=9;   
    optional uint32 realSize=10;   
}

message UploadBlockEndReqV2{
    optional int32 userId=1;
    optional string signData=2;
    optional int32 keyNumber=3;
    optional int32 id=4;
    optional bytes VHP=5;
    optional bytes VHB=6;
    optional bytes KEU=7;
    optional bytes KED=8;
    optional int64 originalSize=9;   
    optional int32 realSize=10;   
    optional group VNU=11{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;     
    }
    optional int32 AR=12;
    repeated group OkList=13{
        optional int32 SHARDID=1;
        optional int32 NODEID=2;
        optional bytes VHF=3;
        optional string DNSIGN=4;
    }
    optional int64 vbi=14;
    repeated group ShardSeqList=15{
        optional uint64 seq=1;
    }
}

message UploadBlockEndReqV3{
    optional int32 userId=1;
    optional string signData=2;
    optional int32 keyNumber=3;
    optional int32 id=4;
    optional bytes VHP=5;
    optional bytes VHB=6;
    optional bytes KEU=7;
    optional bytes KED=8;
    optional int64 originalSize=9;   
    optional int32 realSize=10;   
    optional string VNU=11;
    optional int32 AR=12;
    repeated group OkList=13{
        optional int32 SHARDID=1;
        optional int32 NODEID=2;
        optional bytes VHF=3;
        optional string DNSIGN=4;
        optional int32 NODEID2=5;
        optional string DNSIGN2=6;
    }
    optional int64 vbi=14;
    repeated group ShardSeqList=15{
        optional uint64 seq=1;
    }
    repeated group ShardSeqList2=16{
        optional uint64 seq=1;
    }
}

message CheckBlockDupReq{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional bytes VHP=4;
}

message UploadBlockInitReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional bytes VHP=4;
    optional group VNU=5{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;   
    } 
    optional uint32 id=6;
    optional string version=7;
    optional bool compareFlag=8;
}

message UploadObjectEndReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional group VNU=4{
        optional uint32 timestamp=1;
        optional int32 machineIdentifier=2;
        optional uint32 processIdentifier=3;
        optional int32 counter=4;   
    } 
    optional bytes VHW=5;
}

message UploadObjectInitReqV2{
    optional uint32 userId=1;
    optional string signData=2;
    optional uint32 keyNumber=3;
    optional bytes VHW=4;
    optional uint64 length=5;
}

message CompareShardReq{
    repeated group Shards=1{
        optional int32 NodeId=1;
        optional uint64 Seq=2;
        optional bytes VHF=3;
    }
}

