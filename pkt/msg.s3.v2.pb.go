// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.5.0
// source: msg.s3.v2.proto

package pkt

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CopyObjectReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData      *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber     *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	SrcBucket     *string `protobuf:"bytes,4,opt,name=srcBucket" json:"srcBucket,omitempty"`
	SrcObjectKey  *string `protobuf:"bytes,5,opt,name=srcObjectKey" json:"srcObjectKey,omitempty"`
	DestBucket    *string `protobuf:"bytes,6,opt,name=destBucket" json:"destBucket,omitempty"`
	DestObjectKey *string `protobuf:"bytes,7,opt,name=destObjectKey" json:"destObjectKey,omitempty"`
	Meta          []byte  `protobuf:"bytes,8,opt,name=meta" json:"meta,omitempty"`
}

func (x *CopyObjectReqV2) Reset() {
	*x = CopyObjectReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyObjectReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyObjectReqV2) ProtoMessage() {}

func (x *CopyObjectReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyObjectReqV2.ProtoReflect.Descriptor instead.
func (*CopyObjectReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{0}
}

func (x *CopyObjectReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *CopyObjectReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *CopyObjectReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *CopyObjectReqV2) GetSrcBucket() string {
	if x != nil && x.SrcBucket != nil {
		return *x.SrcBucket
	}
	return ""
}

func (x *CopyObjectReqV2) GetSrcObjectKey() string {
	if x != nil && x.SrcObjectKey != nil {
		return *x.SrcObjectKey
	}
	return ""
}

func (x *CopyObjectReqV2) GetDestBucket() string {
	if x != nil && x.DestBucket != nil {
		return *x.DestBucket
	}
	return ""
}

func (x *CopyObjectReqV2) GetDestObjectKey() string {
	if x != nil && x.DestObjectKey != nil {
		return *x.DestObjectKey
	}
	return ""
}

func (x *CopyObjectReqV2) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreateBucketReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
	Meta       []byte  `protobuf:"bytes,5,opt,name=meta" json:"meta,omitempty"`
}

func (x *CreateBucketReqV2) Reset() {
	*x = CreateBucketReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketReqV2) ProtoMessage() {}

func (x *CreateBucketReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketReqV2.ProtoReflect.Descriptor instead.
func (*CreateBucketReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBucketReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *CreateBucketReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *CreateBucketReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *CreateBucketReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *CreateBucketReqV2) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DeleteBucketReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
}

func (x *DeleteBucketReqV2) Reset() {
	*x = DeleteBucketReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketReqV2) ProtoMessage() {}

func (x *DeleteBucketReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketReqV2.ProtoReflect.Descriptor instead.
func (*DeleteBucketReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteBucketReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DeleteBucketReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *DeleteBucketReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *DeleteBucketReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

type DeleteFileReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32              `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string              `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32              `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string              `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
	FileName   *string              `protobuf:"bytes,5,opt,name=fileName" json:"fileName,omitempty"`
	Vnu        *DeleteFileReqV2_VNU `protobuf:"group,6,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	Meta       []byte               `protobuf:"bytes,7,opt,name=meta" json:"meta,omitempty"`
}

func (x *DeleteFileReqV2) Reset() {
	*x = DeleteFileReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReqV2) ProtoMessage() {}

func (x *DeleteFileReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReqV2.ProtoReflect.Descriptor instead.
func (*DeleteFileReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteFileReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DeleteFileReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *DeleteFileReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *DeleteFileReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *DeleteFileReqV2) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *DeleteFileReqV2) GetVnu() *DeleteFileReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *DeleteFileReqV2) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetBucketReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
}

func (x *GetBucketReqV2) Reset() {
	*x = GetBucketReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketReqV2) ProtoMessage() {}

func (x *GetBucketReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketReqV2.ProtoReflect.Descriptor instead.
func (*GetBucketReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{4}
}

func (x *GetBucketReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *GetBucketReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *GetBucketReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *GetBucketReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

type GetObjectReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
	FileName   *string `protobuf:"bytes,5,opt,name=fileName" json:"fileName,omitempty"`
}

func (x *GetObjectReqV2) Reset() {
	*x = GetObjectReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectReqV2) ProtoMessage() {}

func (x *GetObjectReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectReqV2.ProtoReflect.Descriptor instead.
func (*GetObjectReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{5}
}

func (x *GetObjectReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *GetObjectReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *GetObjectReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *GetObjectReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *GetObjectReqV2) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

type ListBucketReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	B         *bool   `protobuf:"varint,4,opt,name=b" json:"b,omitempty"`
}

func (x *ListBucketReqV2) Reset() {
	*x = ListBucketReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketReqV2) ProtoMessage() {}

func (x *ListBucketReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketReqV2.ProtoReflect.Descriptor instead.
func (*ListBucketReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{6}
}

func (x *ListBucketReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListBucketReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *ListBucketReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *ListBucketReqV2) GetB() bool {
	if x != nil && x.B != nil {
		return *x.B
	}
	return false
}

type ListObjectReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        *uint32                        `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData      *string                        `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber     *uint32                        `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName    *string                        `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
	Startid       *ListObjectReqV2_StartId       `protobuf:"group,5,opt,name=StartId,json=startid" json:"startid,omitempty"`
	Limit         *uint32                        `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	FileName      *string                        `protobuf:"bytes,7,opt,name=fileName" json:"fileName,omitempty"`
	Prefix        *string                        `protobuf:"bytes,8,opt,name=prefix" json:"prefix,omitempty"`
	Version       *bool                          `protobuf:"varint,9,opt,name=version" json:"version,omitempty"`
	Nextversionid *ListObjectReqV2_NextVersionId `protobuf:"group,10,opt,name=NextVersionId,json=nextversionid" json:"nextversionid,omitempty"`
	Compress      *bool                          `protobuf:"varint,11,opt,name=compress" json:"compress,omitempty"`
}

func (x *ListObjectReqV2) Reset() {
	*x = ListObjectReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectReqV2) ProtoMessage() {}

func (x *ListObjectReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectReqV2.ProtoReflect.Descriptor instead.
func (*ListObjectReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{7}
}

func (x *ListObjectReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListObjectReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *ListObjectReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *ListObjectReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *ListObjectReqV2) GetStartid() *ListObjectReqV2_StartId {
	if x != nil {
		return x.Startid
	}
	return nil
}

func (x *ListObjectReqV2) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListObjectReqV2) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *ListObjectReqV2) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *ListObjectReqV2) GetVersion() bool {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return false
}

func (x *ListObjectReqV2) GetNextversionid() *ListObjectReqV2_NextVersionId {
	if x != nil {
		return x.Nextversionid
	}
	return nil
}

func (x *ListObjectReqV2) GetCompress() bool {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return false
}

type UpdateBucketReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	BucketName *string `protobuf:"bytes,4,opt,name=bucketName" json:"bucketName,omitempty"`
	Meta       []byte  `protobuf:"bytes,5,opt,name=meta" json:"meta,omitempty"`
}

func (x *UpdateBucketReqV2) Reset() {
	*x = UpdateBucketReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBucketReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketReqV2) ProtoMessage() {}

func (x *UpdateBucketReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketReqV2.ProtoReflect.Descriptor instead.
func (*UpdateBucketReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateBucketReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UpdateBucketReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UpdateBucketReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UpdateBucketReqV2) GetBucketName() string {
	if x != nil && x.BucketName != nil {
		return *x.BucketName
	}
	return ""
}

func (x *UpdateBucketReqV2) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type UploadFileReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32              `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string              `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32              `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Bucketname *string              `protobuf:"bytes,4,opt,name=bucketname" json:"bucketname,omitempty"`
	FileName   *string              `protobuf:"bytes,5,opt,name=fileName" json:"fileName,omitempty"`
	Vnu        *UploadFileReqV2_VNU `protobuf:"group,6,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	Meta       []byte               `protobuf:"bytes,7,opt,name=meta" json:"meta,omitempty"`
}

func (x *UploadFileReqV2) Reset() {
	*x = UploadFileReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReqV2) ProtoMessage() {}

func (x *UploadFileReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReqV2.ProtoReflect.Descriptor instead.
func (*UploadFileReqV2) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{9}
}

func (x *UploadFileReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadFileReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadFileReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadFileReqV2) GetBucketname() string {
	if x != nil && x.Bucketname != nil {
		return *x.Bucketname
	}
	return ""
}

func (x *UploadFileReqV2) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *UploadFileReqV2) GetVnu() *UploadFileReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadFileReqV2) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DeleteFileReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *DeleteFileReqV2_VNU) Reset() {
	*x = DeleteFileReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReqV2_VNU) ProtoMessage() {}

func (x *DeleteFileReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReqV2_VNU.ProtoReflect.Descriptor instead.
func (*DeleteFileReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DeleteFileReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *DeleteFileReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *DeleteFileReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *DeleteFileReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type ListObjectReqV2_StartId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *ListObjectReqV2_StartId) Reset() {
	*x = ListObjectReqV2_StartId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectReqV2_StartId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectReqV2_StartId) ProtoMessage() {}

func (x *ListObjectReqV2_StartId) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectReqV2_StartId.ProtoReflect.Descriptor instead.
func (*ListObjectReqV2_StartId) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListObjectReqV2_StartId) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *ListObjectReqV2_StartId) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *ListObjectReqV2_StartId) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *ListObjectReqV2_StartId) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type ListObjectReqV2_NextVersionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *ListObjectReqV2_NextVersionId) Reset() {
	*x = ListObjectReqV2_NextVersionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectReqV2_NextVersionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectReqV2_NextVersionId) ProtoMessage() {}

func (x *ListObjectReqV2_NextVersionId) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectReqV2_NextVersionId.ProtoReflect.Descriptor instead.
func (*ListObjectReqV2_NextVersionId) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ListObjectReqV2_NextVersionId) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *ListObjectReqV2_NextVersionId) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *ListObjectReqV2_NextVersionId) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *ListObjectReqV2_NextVersionId) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadFileReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadFileReqV2_VNU) Reset() {
	*x = UploadFileReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_s3_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReqV2_VNU) ProtoMessage() {}

func (x *UploadFileReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_s3_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadFileReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_s3_v2_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UploadFileReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadFileReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadFileReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadFileReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

var File_msg_s3_v2_proto protoreflect.FileDescriptor

var file_msg_s3_v2_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x2e, 0x73, 0x33, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x70, 0x6b, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x70, 0x79, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x72, 0x63, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x72, 0x63, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x72,
	0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x72, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfb, 0x02, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x56, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x18, 0x2e, 0x70, 0x6b,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x56,
	0x32, 0x2e, 0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x1a, 0x99,
	0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x71, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x01, 0x62, 0x22, 0xcb, 0x05, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x1c, 0x2e, 0x70, 0x6b, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x22, 0x2e, 0x70,
	0x6b, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x56, 0x32, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0xa3, 0x01, 0x0a, 0x0d,
	0x4e, 0x65, 0x78, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xfb, 0x02,
	0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x56,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x18, 0x2e, 0x70,
	0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x56, 0x32, 0x2e, 0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x1a,
	0x99, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
}

var (
	file_msg_s3_v2_proto_rawDescOnce sync.Once
	file_msg_s3_v2_proto_rawDescData = file_msg_s3_v2_proto_rawDesc
)

func file_msg_s3_v2_proto_rawDescGZIP() []byte {
	file_msg_s3_v2_proto_rawDescOnce.Do(func() {
		file_msg_s3_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_s3_v2_proto_rawDescData)
	})
	return file_msg_s3_v2_proto_rawDescData
}

var file_msg_s3_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_msg_s3_v2_proto_goTypes = []interface{}{
	(*CopyObjectReqV2)(nil),               // 0: pkt.CopyObjectReqV2
	(*CreateBucketReqV2)(nil),             // 1: pkt.CreateBucketReqV2
	(*DeleteBucketReqV2)(nil),             // 2: pkt.DeleteBucketReqV2
	(*DeleteFileReqV2)(nil),               // 3: pkt.DeleteFileReqV2
	(*GetBucketReqV2)(nil),                // 4: pkt.GetBucketReqV2
	(*GetObjectReqV2)(nil),                // 5: pkt.GetObjectReqV2
	(*ListBucketReqV2)(nil),               // 6: pkt.ListBucketReqV2
	(*ListObjectReqV2)(nil),               // 7: pkt.ListObjectReqV2
	(*UpdateBucketReqV2)(nil),             // 8: pkt.UpdateBucketReqV2
	(*UploadFileReqV2)(nil),               // 9: pkt.UploadFileReqV2
	(*DeleteFileReqV2_VNU)(nil),           // 10: pkt.DeleteFileReqV2.VNU
	(*ListObjectReqV2_StartId)(nil),       // 11: pkt.ListObjectReqV2.StartId
	(*ListObjectReqV2_NextVersionId)(nil), // 12: pkt.ListObjectReqV2.NextVersionId
	(*UploadFileReqV2_VNU)(nil),           // 13: pkt.UploadFileReqV2.VNU
}
var file_msg_s3_v2_proto_depIdxs = []int32{
	10, // 0: pkt.DeleteFileReqV2.vnu:type_name -> pkt.DeleteFileReqV2.VNU
	11, // 1: pkt.ListObjectReqV2.startid:type_name -> pkt.ListObjectReqV2.StartId
	12, // 2: pkt.ListObjectReqV2.nextversionid:type_name -> pkt.ListObjectReqV2.NextVersionId
	13, // 3: pkt.UploadFileReqV2.vnu:type_name -> pkt.UploadFileReqV2.VNU
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_msg_s3_v2_proto_init() }
func file_msg_s3_v2_proto_init() {
	if File_msg_s3_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_s3_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyObjectReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBucketReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectReqV2_StartId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectReqV2_NextVersionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_s3_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_s3_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_s3_v2_proto_goTypes,
		DependencyIndexes: file_msg_s3_v2_proto_depIdxs,
		MessageInfos:      file_msg_s3_v2_proto_msgTypes,
	}.Build()
	File_msg_s3_v2_proto = out.File
	file_msg_s3_v2_proto_rawDesc = nil
	file_msg_s3_v2_proto_goTypes = nil
	file_msg_s3_v2_proto_depIdxs = nil
}
