// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.21.2
// source: msg.proto

package pkt

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DownloadShardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VHF []byte `protobuf:"bytes,1,opt,name=VHF,proto3" json:"VHF,omitempty"`
}

func (x *DownloadShardReq) Reset() {
	*x = DownloadShardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadShardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadShardReq) ProtoMessage() {}

func (x *DownloadShardReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadShardReq.ProtoReflect.Descriptor instead.
func (*DownloadShardReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadShardReq) GetVHF() []byte {
	if x != nil {
		return x.VHF
	}
	return nil
}

type DownloadShardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadShardResp) Reset() {
	*x = DownloadShardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadShardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadShardResp) ProtoMessage() {}

func (x *DownloadShardResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadShardResp.ProtoReflect.Descriptor instead.
func (*DownloadShardResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadShardResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SpotCheckStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId          string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	InvalidNodeList []uint32 `protobuf:"varint,2,rep,packed,name=invalidNodeList,proto3" json:"invalidNodeList,omitempty"`
}

func (x *SpotCheckStatus) Reset() {
	*x = SpotCheckStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpotCheckStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotCheckStatus) ProtoMessage() {}

func (x *SpotCheckStatus) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotCheckStatus.ProtoReflect.Descriptor instead.
func (*SpotCheckStatus) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *SpotCheckStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SpotCheckStatus) GetInvalidNodeList() []uint32 {
	if x != nil {
		return x.InvalidNodeList
	}
	return nil
}

type SpotCheckTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Addr   string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	VHF    []byte `protobuf:"bytes,4,opt,name=VHF,proto3" json:"VHF,omitempty"`
}

func (x *SpotCheckTask) Reset() {
	*x = SpotCheckTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpotCheckTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotCheckTask) ProtoMessage() {}

func (x *SpotCheckTask) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotCheckTask.ProtoReflect.Descriptor instead.
func (*SpotCheckTask) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

func (x *SpotCheckTask) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpotCheckTask) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SpotCheckTask) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SpotCheckTask) GetVHF() []byte {
	if x != nil {
		return x.VHF
	}
	return nil
}

type SpotCheckTaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string           `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Snid     int32            `protobuf:"varint,2,opt,name=snid,proto3" json:"snid,omitempty"`
	TaskList []*SpotCheckTask `protobuf:"bytes,3,rep,name=taskList,proto3" json:"taskList,omitempty"`
}

func (x *SpotCheckTaskList) Reset() {
	*x = SpotCheckTaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpotCheckTaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotCheckTaskList) ProtoMessage() {}

func (x *SpotCheckTaskList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotCheckTaskList.ProtoReflect.Descriptor instead.
func (*SpotCheckTaskList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

func (x *SpotCheckTaskList) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SpotCheckTaskList) GetSnid() int32 {
	if x != nil {
		return x.Snid
	}
	return 0
}

func (x *SpotCheckTaskList) GetTaskList() []*SpotCheckTask {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type StatusRepReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cpu            int32    `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory         int32    `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Bandwidth      int32    `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	MaxDataSpace   int64    `protobuf:"varint,5,opt,name=maxDataSpace,proto3" json:"maxDataSpace,omitempty"`
	AssignedSpace  int64    `protobuf:"varint,6,opt,name=assignedSpace,proto3" json:"assignedSpace,omitempty"`
	UsedSpace      int64    `protobuf:"varint,7,opt,name=usedSpace,proto3" json:"usedSpace,omitempty"`
	Addrs          []string `protobuf:"bytes,8,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Relay          bool     `protobuf:"varint,9,opt,name=relay,proto3" json:"relay,omitempty"`
	Version        int32    `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	Rebuilding     int32    `protobuf:"varint,11,opt,name=rebuilding,proto3" json:"rebuilding,omitempty"`
	RealSpace      int64    `protobuf:"varint,12,opt,name=realSpace,proto3" json:"realSpace,omitempty"`
	Tx             int64    `protobuf:"varint,13,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx             int64    `protobuf:"varint,14,opt,name=rx,proto3" json:"rx,omitempty"`
	Other          string   `protobuf:"bytes,15,opt,name=other,proto3" json:"other,omitempty"`
	Hash           string   `protobuf:"bytes,16,opt,name=hash,proto3" json:"hash,omitempty"`
	AllocSpace     uint64   `protobuf:"varint,17,opt,name=allocSpace,proto3" json:"allocSpace,omitempty"`
	AvailableSpace uint32   `protobuf:"varint,18,opt,name=availableSpace,proto3" json:"availableSpace,omitempty"`
}

func (x *StatusRepReq) Reset() {
	*x = StatusRepReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRepReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRepReq) ProtoMessage() {}

func (x *StatusRepReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRepReq.ProtoReflect.Descriptor instead.
func (*StatusRepReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{6}
}

func (x *StatusRepReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StatusRepReq) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *StatusRepReq) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *StatusRepReq) GetBandwidth() int32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *StatusRepReq) GetMaxDataSpace() int64 {
	if x != nil {
		return x.MaxDataSpace
	}
	return 0
}

func (x *StatusRepReq) GetAssignedSpace() int64 {
	if x != nil {
		return x.AssignedSpace
	}
	return 0
}

func (x *StatusRepReq) GetUsedSpace() int64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *StatusRepReq) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *StatusRepReq) GetRelay() bool {
	if x != nil {
		return x.Relay
	}
	return false
}

func (x *StatusRepReq) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StatusRepReq) GetRebuilding() int32 {
	if x != nil {
		return x.Rebuilding
	}
	return 0
}

func (x *StatusRepReq) GetRealSpace() int64 {
	if x != nil {
		return x.RealSpace
	}
	return 0
}

func (x *StatusRepReq) GetTx() int64 {
	if x != nil {
		return x.Tx
	}
	return 0
}

func (x *StatusRepReq) GetRx() int64 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *StatusRepReq) GetOther() string {
	if x != nil {
		return x.Other
	}
	return ""
}

func (x *StatusRepReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StatusRepReq) GetAllocSpace() uint64 {
	if x != nil {
		return x.AllocSpace
	}
	return 0
}

func (x *StatusRepReq) GetAvailableSpace() uint32 {
	if x != nil {
		return x.AvailableSpace
	}
	return 0
}

type StatusRepResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductiveSpace int64  `protobuf:"varint,1,opt,name=productiveSpace,proto3" json:"productiveSpace,omitempty"`
	RelayUrl        string `protobuf:"bytes,2,opt,name=relayUrl,proto3" json:"relayUrl,omitempty"`
	DnStatus        int32  `protobuf:"varint,3,opt,name=dnStatus,proto3" json:"dnStatus,omitempty"`
}

func (x *StatusRepResp) Reset() {
	*x = StatusRepResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRepResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRepResp) ProtoMessage() {}

func (x *StatusRepResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRepResp.ProtoReflect.Descriptor instead.
func (*StatusRepResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{7}
}

func (x *StatusRepResp) GetProductiveSpace() int64 {
	if x != nil {
		return x.ProductiveSpace
	}
	return 0
}

func (x *StatusRepResp) GetRelayUrl() string {
	if x != nil {
		return x.RelayUrl
	}
	return ""
}

func (x *StatusRepResp) GetDnStatus() int32 {
	if x != nil {
		return x.DnStatus
	}
	return 0
}

type TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasklist       [][]byte `protobuf:"bytes,1,rep,name=tasklist,proto3" json:"tasklist,omitempty"`
	ExpiredTime    int64    `protobuf:"varint,2,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	SrcNodeID      int32    `protobuf:"varint,3,opt,name=srcNodeID,proto3" json:"srcNodeID,omitempty"`
	ExpiredTimeGap int32    `protobuf:"varint,4,opt,name=expiredTimeGap,proto3" json:"expiredTimeGap,omitempty"`
	Padding        int32    `protobuf:"varint,5,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{8}
}

func (x *TaskList) GetTasklist() [][]byte {
	if x != nil {
		return x.Tasklist
	}
	return nil
}

func (x *TaskList) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *TaskList) GetSrcNodeID() int32 {
	if x != nil {
		return x.SrcNodeID
	}
	return 0
}

func (x *TaskList) GetExpiredTimeGap() int32 {
	if x != nil {
		return x.ExpiredTimeGap
	}
	return 0
}

func (x *TaskList) GetPadding() int32 {
	if x != nil {
		return x.Padding
	}
	return 0
}

type TaskDispatchList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DNI        [][]byte `protobuf:"bytes,1,rep,name=DNI,proto3" json:"DNI,omitempty"`
	NodeId     uint32   `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	ExecNodeId uint32   `protobuf:"varint,3,opt,name=execNodeId,proto3" json:"execNodeId,omitempty"`
}

func (x *TaskDispatchList) Reset() {
	*x = TaskDispatchList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDispatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDispatchList) ProtoMessage() {}

func (x *TaskDispatchList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDispatchList.ProtoReflect.Descriptor instead.
func (*TaskDispatchList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{9}
}

func (x *TaskDispatchList) GetDNI() [][]byte {
	if x != nil {
		return x.DNI
	}
	return nil
}

func (x *TaskDispatchList) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TaskDispatchList) GetExecNodeId() uint32 {
	if x != nil {
		return x.ExecNodeId
	}
	return 0
}

type MultiTaskOpResultRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	SuccNum int32 `protobuf:"varint,2,opt,name=succNum,proto3" json:"succNum,omitempty"`
}

func (x *MultiTaskOpResultRes) Reset() {
	*x = MultiTaskOpResultRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTaskOpResultRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTaskOpResultRes) ProtoMessage() {}

func (x *MultiTaskOpResultRes) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTaskOpResultRes.ProtoReflect.Descriptor instead.
func (*MultiTaskOpResultRes) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{10}
}

func (x *MultiTaskOpResultRes) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MultiTaskOpResultRes) GetSuccNum() int32 {
	if x != nil {
		return x.SuccNum
	}
	return 0
}

type TaskOpResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          [][]byte `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	RES         []int32  `protobuf:"varint,2,rep,packed,name=RES,proto3" json:"RES,omitempty"`
	NodeId      int32    `protobuf:"varint,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	ExpiredTime int64    `protobuf:"varint,4,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	SrcNodeID   int32    `protobuf:"varint,5,opt,name=srcNodeID,proto3" json:"srcNodeID,omitempty"`
}

func (x *TaskOpResultList) Reset() {
	*x = TaskOpResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskOpResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOpResultList) ProtoMessage() {}

func (x *TaskOpResultList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOpResultList.ProtoReflect.Descriptor instead.
func (*TaskOpResultList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{11}
}

func (x *TaskOpResultList) GetId() [][]byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TaskOpResultList) GetRES() []int32 {
	if x != nil {
		return x.RES
	}
	return nil
}

func (x *TaskOpResultList) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TaskOpResultList) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *TaskOpResultList) GetSrcNodeID() int32 {
	if x != nil {
		return x.SrcNodeID
	}
	return 0
}

type UploadShard2CResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RES    int32  `protobuf:"varint,1,opt,name=RES,proto3" json:"RES,omitempty"`
	DNSIGN string `protobuf:"bytes,2,opt,name=DNSIGN,proto3" json:"DNSIGN,omitempty"`
}

func (x *UploadShard2CResp) Reset() {
	*x = UploadShard2CResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadShard2CResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadShard2CResp) ProtoMessage() {}

func (x *UploadShard2CResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadShard2CResp.ProtoReflect.Descriptor instead.
func (*UploadShard2CResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{12}
}

func (x *UploadShard2CResp) GetRES() int32 {
	if x != nil {
		return x.RES
	}
	return 0
}

func (x *UploadShard2CResp) GetDNSIGN() string {
	if x != nil {
		return x.DNSIGN
	}
	return ""
}

type UploadShardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SHARDID  int32  `protobuf:"varint,1,opt,name=SHARDID,proto3" json:"SHARDID,omitempty"`
	BPDID    int32  `protobuf:"varint,2,opt,name=BPDID,proto3" json:"BPDID,omitempty"`
	VBI      int64  `protobuf:"varint,3,opt,name=VBI,proto3" json:"VBI,omitempty"`
	BPDSIGN  []byte `protobuf:"bytes,4,opt,name=BPDSIGN,proto3" json:"BPDSIGN,omitempty"`
	DAT      []byte `protobuf:"bytes,5,opt,name=DAT,proto3" json:"DAT,omitempty"`
	VHF      []byte `protobuf:"bytes,6,opt,name=VHF,proto3" json:"VHF,omitempty"`
	USERSIGN []byte `protobuf:"bytes,7,opt,name=USERSIGN,proto3" json:"USERSIGN,omitempty"`
	AllocId  string `protobuf:"bytes,8,opt,name=allocId,proto3" json:"allocId,omitempty"`
	HASHID   int64  `protobuf:"varint,9,opt,name=HASHID,proto3" json:"HASHID,omitempty"`
}

func (x *UploadShardReq) Reset() {
	*x = UploadShardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadShardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadShardReq) ProtoMessage() {}

func (x *UploadShardReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadShardReq.ProtoReflect.Descriptor instead.
func (*UploadShardReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13}
}

func (x *UploadShardReq) GetSHARDID() int32 {
	if x != nil {
		return x.SHARDID
	}
	return 0
}

func (x *UploadShardReq) GetBPDID() int32 {
	if x != nil {
		return x.BPDID
	}
	return 0
}

func (x *UploadShardReq) GetVBI() int64 {
	if x != nil {
		return x.VBI
	}
	return 0
}

func (x *UploadShardReq) GetBPDSIGN() []byte {
	if x != nil {
		return x.BPDSIGN
	}
	return nil
}

func (x *UploadShardReq) GetDAT() []byte {
	if x != nil {
		return x.DAT
	}
	return nil
}

func (x *UploadShardReq) GetVHF() []byte {
	if x != nil {
		return x.VHF
	}
	return nil
}

func (x *UploadShardReq) GetUSERSIGN() []byte {
	if x != nil {
		return x.USERSIGN
	}
	return nil
}

func (x *UploadShardReq) GetAllocId() string {
	if x != nil {
		return x.AllocId
	}
	return ""
}

func (x *UploadShardReq) GetHASHID() int64 {
	if x != nil {
		return x.HASHID
	}
	return 0
}

type VoidResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VoidResp) Reset() {
	*x = VoidResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoidResp) ProtoMessage() {}

func (x *VoidResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoidResp.ProtoReflect.Descriptor instead.
func (*VoidResp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{14}
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x6b, 0x74,
	0x22, 0x24, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x46, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x56, 0x48, 0x46, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x34, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x0d, 0x53, 0x70,
	0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x46, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x46, 0x22, 0x6f, 0x0a, 0x11, 0x53, 0x70, 0x6f,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6e, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x6b, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe4, 0x03, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x64, 0x64, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x78, 0x12,
	0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x71, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x5c, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4e, 0x49, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x03, 0x44, 0x4e, 0x49, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x4a, 0x0a,
	0x14, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x4e, 0x75, 0x6d, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x45, 0x53, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x52, 0x45, 0x53,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x72,
	0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x45, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x45, 0x53, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x22, 0xde, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x48,
	0x41, 0x52, 0x44, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x48, 0x41,
	0x52, 0x44, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x50, 0x44, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x42, 0x50, 0x44, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x42,
	0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x56, 0x42, 0x49, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x50, 0x44, 0x53, 0x49, 0x47, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x42,
	0x50, 0x44, 0x53, 0x49, 0x47, 0x4e, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x41, 0x54, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x44, 0x41, 0x54, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x46, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x53,
	0x45, 0x52, 0x53, 0x49, 0x47, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x55, 0x53,
	0x45, 0x52, 0x53, 0x49, 0x47, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x41, 0x53, 0x48, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x48, 0x41, 0x53, 0x48, 0x49, 0x44, 0x22, 0x0a, 0x0a, 0x08, 0x56, 0x6f, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_msg_proto_goTypes = []interface{}{
	(*DownloadShardReq)(nil),     // 0: pkt.DownloadShardReq
	(*DownloadShardResp)(nil),    // 1: pkt.DownloadShardResp
	(*ErrorMessage)(nil),         // 2: pkt.ErrorMessage
	(*SpotCheckStatus)(nil),      // 3: pkt.SpotCheckStatus
	(*SpotCheckTask)(nil),        // 4: pkt.SpotCheckTask
	(*SpotCheckTaskList)(nil),    // 5: pkt.SpotCheckTaskList
	(*StatusRepReq)(nil),         // 6: pkt.StatusRepReq
	(*StatusRepResp)(nil),        // 7: pkt.StatusRepResp
	(*TaskList)(nil),             // 8: pkt.TaskList
	(*TaskDispatchList)(nil),     // 9: pkt.TaskDispatchList
	(*MultiTaskOpResultRes)(nil), // 10: pkt.MultiTaskOpResultRes
	(*TaskOpResultList)(nil),     // 11: pkt.TaskOpResultList
	(*UploadShard2CResp)(nil),    // 12: pkt.UploadShard2CResp
	(*UploadShardReq)(nil),       // 13: pkt.UploadShardReq
	(*VoidResp)(nil),             // 14: pkt.VoidResp
}
var file_msg_proto_depIdxs = []int32{
	4, // 0: pkt.SpotCheckTaskList.taskList:type_name -> pkt.SpotCheckTask
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadShardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadShardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpotCheckStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpotCheckTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpotCheckTaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRepReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRepResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDispatchList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTaskOpResultRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskOpResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadShard2CResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadShardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoidResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
