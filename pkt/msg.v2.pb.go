// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.21.2
// source: msg.v2.proto

package pkt

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActiveCacheV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32            `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string            `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32            `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Vnu       *ActiveCacheV2_VNU `protobuf:"group,4,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
}

func (x *ActiveCacheV2) Reset() {
	*x = ActiveCacheV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCacheV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCacheV2) ProtoMessage() {}

func (x *ActiveCacheV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCacheV2.ProtoReflect.Descriptor instead.
func (*ActiveCacheV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{0}
}

func (x *ActiveCacheV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ActiveCacheV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *ActiveCacheV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *ActiveCacheV2) GetVnu() *ActiveCacheV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

type DownloadBlockInitReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	VBI       *uint64 `protobuf:"varint,4,opt,name=VBI" json:"VBI,omitempty"`
}

func (x *DownloadBlockInitReqV2) Reset() {
	*x = DownloadBlockInitReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBlockInitReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBlockInitReqV2) ProtoMessage() {}

func (x *DownloadBlockInitReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBlockInitReqV2.ProtoReflect.Descriptor instead.
func (*DownloadBlockInitReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadBlockInitReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DownloadBlockInitReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *DownloadBlockInitReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *DownloadBlockInitReqV2) GetVBI() uint64 {
	if x != nil && x.VBI != nil {
		return *x.VBI
	}
	return 0
}

type DownloadFileReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *uint32                      `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData   *string                      `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber  *uint32                      `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Bucketname *string                      `protobuf:"bytes,4,opt,name=bucketname" json:"bucketname,omitempty"`
	FileName   *string                      `protobuf:"bytes,5,opt,name=fileName" json:"fileName,omitempty"`
	Versionid  *DownloadFileReqV2_VersionId `protobuf:"group,6,opt,name=VersionId,json=versionid" json:"versionid,omitempty"`
}

func (x *DownloadFileReqV2) Reset() {
	*x = DownloadFileReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReqV2) ProtoMessage() {}

func (x *DownloadFileReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReqV2.ProtoReflect.Descriptor instead.
func (*DownloadFileReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadFileReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DownloadFileReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *DownloadFileReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *DownloadFileReqV2) GetBucketname() string {
	if x != nil && x.Bucketname != nil {
		return *x.Bucketname
	}
	return ""
}

func (x *DownloadFileReqV2) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *DownloadFileReqV2) GetVersionid() *DownloadFileReqV2_VersionId {
	if x != nil {
		return x.Versionid
	}
	return nil
}

type DownloadObjectInitReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	VHW       []byte  `protobuf:"bytes,4,opt,name=VHW" json:"VHW,omitempty"`
}

func (x *DownloadObjectInitReqV2) Reset() {
	*x = DownloadObjectInitReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadObjectInitReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadObjectInitReqV2) ProtoMessage() {}

func (x *DownloadObjectInitReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadObjectInitReqV2.ProtoReflect.Descriptor instead.
func (*DownloadObjectInitReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadObjectInitReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DownloadObjectInitReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *DownloadObjectInitReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *DownloadObjectInitReqV2) GetVHW() []byte {
	if x != nil {
		return x.VHW
	}
	return nil
}

type PreAllocNodeReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Count     *uint32 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Excludes  []int32 `protobuf:"varint,5,rep,name=excludes" json:"excludes,omitempty"`
}

func (x *PreAllocNodeReqV2) Reset() {
	*x = PreAllocNodeReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreAllocNodeReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAllocNodeReqV2) ProtoMessage() {}

func (x *PreAllocNodeReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAllocNodeReqV2.ProtoReflect.Descriptor instead.
func (*PreAllocNodeReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{4}
}

func (x *PreAllocNodeReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *PreAllocNodeReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *PreAllocNodeReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *PreAllocNodeReqV2) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *PreAllocNodeReqV2) GetExcludes() []int32 {
	if x != nil {
		return x.Excludes
	}
	return nil
}

type QueryUserReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey   []string `protobuf:"bytes,1,rep,name=pubkey" json:"pubkey,omitempty"`
	Username *string  `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	UserId   *int32   `protobuf:"varint,3,opt,name=UserId" json:"UserId,omitempty"`
}

func (x *QueryUserReqV2) Reset() {
	*x = QueryUserReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserReqV2) ProtoMessage() {}

func (x *QueryUserReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserReqV2.ProtoReflect.Descriptor instead.
func (*QueryUserReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{5}
}

func (x *QueryUserReqV2) GetPubkey() []string {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *QueryUserReqV2) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *QueryUserReqV2) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

type SyncUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey   [][]byte `protobuf:"bytes,1,rep,name=pubkey" json:"pubkey,omitempty"`
	Username *string  `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	UserId   *int32   `protobuf:"varint,3,opt,name=UserId" json:"UserId,omitempty"`
}

func (x *SyncUserReq) Reset() {
	*x = SyncUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserReq) ProtoMessage() {}

func (x *SyncUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserReq.ProtoReflect.Descriptor instead.
func (*SyncUserReq) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{6}
}

func (x *SyncUserReq) GetPubkey() [][]byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *SyncUserReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SyncUserReq) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

type RegUserReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey    *string `protobuf:"bytes,1,opt,name=pubKey" json:"pubKey,omitempty"`
	Username  *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	VersionId *string `protobuf:"bytes,3,opt,name=versionId" json:"versionId,omitempty"`
}

func (x *RegUserReqV2) Reset() {
	*x = RegUserReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegUserReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegUserReqV2) ProtoMessage() {}

func (x *RegUserReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegUserReqV2.ProtoReflect.Descriptor instead.
func (*RegUserReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{7}
}

func (x *RegUserReqV2) GetPubKey() string {
	if x != nil && x.PubKey != nil {
		return *x.PubKey
	}
	return ""
}

func (x *RegUserReqV2) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RegUserReqV2) GetVersionId() string {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return ""
}

type RegUserReqV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey    []string `protobuf:"bytes,1,rep,name=pubKey" json:"pubKey,omitempty"`
	Username  *string  `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	VersionId *string  `protobuf:"bytes,3,opt,name=versionId" json:"versionId,omitempty"`
}

func (x *RegUserReqV3) Reset() {
	*x = RegUserReqV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegUserReqV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegUserReqV3) ProtoMessage() {}

func (x *RegUserReqV3) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegUserReqV3.ProtoReflect.Descriptor instead.
func (*RegUserReqV3) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{8}
}

func (x *RegUserReqV3) GetPubKey() []string {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *RegUserReqV3) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RegUserReqV3) GetVersionId() string {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return ""
}

type UploadBlockDBReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *uint32                 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData     *string                 `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber    *uint32                 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Id           *uint32                 `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Vnu          *UploadBlockDBReqV2_VNU `protobuf:"group,5,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	VHP          []byte                  `protobuf:"bytes,6,opt,name=VHP" json:"VHP,omitempty"`
	VHB          []byte                  `protobuf:"bytes,7,opt,name=VHB" json:"VHB,omitempty"`
	KEU          []byte                  `protobuf:"bytes,8,opt,name=KEU" json:"KEU,omitempty"`
	KED          []byte                  `protobuf:"bytes,9,opt,name=KED" json:"KED,omitempty"`
	OriginalSize *uint64                 `protobuf:"varint,10,opt,name=originalSize" json:"originalSize,omitempty"`
	Data         []byte                  `protobuf:"bytes,11,opt,name=data" json:"data,omitempty"`
}

func (x *UploadBlockDBReqV2) Reset() {
	*x = UploadBlockDBReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockDBReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockDBReqV2) ProtoMessage() {}

func (x *UploadBlockDBReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockDBReqV2.ProtoReflect.Descriptor instead.
func (*UploadBlockDBReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{9}
}

func (x *UploadBlockDBReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadBlockDBReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadBlockDBReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadBlockDBReqV2) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UploadBlockDBReqV2) GetVnu() *UploadBlockDBReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadBlockDBReqV2) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

func (x *UploadBlockDBReqV2) GetVHB() []byte {
	if x != nil {
		return x.VHB
	}
	return nil
}

func (x *UploadBlockDBReqV2) GetKEU() []byte {
	if x != nil {
		return x.KEU
	}
	return nil
}

func (x *UploadBlockDBReqV2) GetKED() []byte {
	if x != nil {
		return x.KED
	}
	return nil
}

func (x *UploadBlockDBReqV2) GetOriginalSize() uint64 {
	if x != nil && x.OriginalSize != nil {
		return *x.OriginalSize
	}
	return 0
}

func (x *UploadBlockDBReqV2) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadBlockDupReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *uint32                  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData     *string                  `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber    *uint32                  `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Id           *uint32                  `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Vnu          *UploadBlockDupReqV2_VNU `protobuf:"group,5,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	VHP          []byte                   `protobuf:"bytes,6,opt,name=VHP" json:"VHP,omitempty"`
	VHB          []byte                   `protobuf:"bytes,7,opt,name=VHB" json:"VHB,omitempty"`
	KEU          []byte                   `protobuf:"bytes,8,opt,name=KEU" json:"KEU,omitempty"`
	OriginalSize *uint64                  `protobuf:"varint,9,opt,name=originalSize" json:"originalSize,omitempty"`
	RealSize     *uint32                  `protobuf:"varint,10,opt,name=realSize" json:"realSize,omitempty"`
}

func (x *UploadBlockDupReqV2) Reset() {
	*x = UploadBlockDupReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockDupReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockDupReqV2) ProtoMessage() {}

func (x *UploadBlockDupReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockDupReqV2.ProtoReflect.Descriptor instead.
func (*UploadBlockDupReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{10}
}

func (x *UploadBlockDupReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadBlockDupReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadBlockDupReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadBlockDupReqV2) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UploadBlockDupReqV2) GetVnu() *UploadBlockDupReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadBlockDupReqV2) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

func (x *UploadBlockDupReqV2) GetVHB() []byte {
	if x != nil {
		return x.VHB
	}
	return nil
}

func (x *UploadBlockDupReqV2) GetKEU() []byte {
	if x != nil {
		return x.KEU
	}
	return nil
}

func (x *UploadBlockDupReqV2) GetOriginalSize() uint64 {
	if x != nil && x.OriginalSize != nil {
		return *x.OriginalSize
	}
	return 0
}

func (x *UploadBlockDupReqV2) GetRealSize() uint32 {
	if x != nil && x.RealSize != nil {
		return *x.RealSize
	}
	return 0
}

type UploadBlockEndReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int32                        `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData     *string                       `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber    *int32                        `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Id           *int32                        `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	VHP          []byte                        `protobuf:"bytes,5,opt,name=VHP" json:"VHP,omitempty"`
	VHB          []byte                        `protobuf:"bytes,6,opt,name=VHB" json:"VHB,omitempty"`
	KEU          []byte                        `protobuf:"bytes,7,opt,name=KEU" json:"KEU,omitempty"`
	KED          []byte                        `protobuf:"bytes,8,opt,name=KED" json:"KED,omitempty"`
	OriginalSize *int64                        `protobuf:"varint,9,opt,name=originalSize" json:"originalSize,omitempty"`
	RealSize     *int32                        `protobuf:"varint,10,opt,name=realSize" json:"realSize,omitempty"`
	Vnu          *UploadBlockEndReqV2_VNU      `protobuf:"group,11,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	AR           *int32                        `protobuf:"varint,12,opt,name=AR" json:"AR,omitempty"`
	Oklist       []*UploadBlockEndReqV2_OkList `protobuf:"group,13,rep,name=OkList,json=oklist" json:"oklist,omitempty"`
	Vbi          *int64                        `protobuf:"varint,14,opt,name=vbi" json:"vbi,omitempty"`
}

func (x *UploadBlockEndReqV2) Reset() {
	*x = UploadBlockEndReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockEndReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockEndReqV2) ProtoMessage() {}

func (x *UploadBlockEndReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockEndReqV2.ProtoReflect.Descriptor instead.
func (*UploadBlockEndReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{11}
}

func (x *UploadBlockEndReqV2) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadBlockEndReqV2) GetKeyNumber() int32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetVHB() []byte {
	if x != nil {
		return x.VHB
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetKEU() []byte {
	if x != nil {
		return x.KEU
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetKED() []byte {
	if x != nil {
		return x.KED
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetOriginalSize() int64 {
	if x != nil && x.OriginalSize != nil {
		return *x.OriginalSize
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetRealSize() int32 {
	if x != nil && x.RealSize != nil {
		return *x.RealSize
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetVnu() *UploadBlockEndReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetAR() int32 {
	if x != nil && x.AR != nil {
		return *x.AR
	}
	return 0
}

func (x *UploadBlockEndReqV2) GetOklist() []*UploadBlockEndReqV2_OkList {
	if x != nil {
		return x.Oklist
	}
	return nil
}

func (x *UploadBlockEndReqV2) GetVbi() int64 {
	if x != nil && x.Vbi != nil {
		return *x.Vbi
	}
	return 0
}

type UploadBlockEndReqV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int32                        `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData     *string                       `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber    *int32                        `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Id           *int32                        `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	VHP          []byte                        `protobuf:"bytes,5,opt,name=VHP" json:"VHP,omitempty"`
	VHB          []byte                        `protobuf:"bytes,6,opt,name=VHB" json:"VHB,omitempty"`
	KEU          []byte                        `protobuf:"bytes,7,opt,name=KEU" json:"KEU,omitempty"`
	KED          []byte                        `protobuf:"bytes,8,opt,name=KED" json:"KED,omitempty"`
	OriginalSize *int64                        `protobuf:"varint,9,opt,name=originalSize" json:"originalSize,omitempty"`
	RealSize     *int32                        `protobuf:"varint,10,opt,name=realSize" json:"realSize,omitempty"`
	VNU          *string                       `protobuf:"bytes,11,opt,name=VNU" json:"VNU,omitempty"`
	AR           *int32                        `protobuf:"varint,12,opt,name=AR" json:"AR,omitempty"`
	Oklist       []*UploadBlockEndReqV3_OkList `protobuf:"group,13,rep,name=OkList,json=oklist" json:"oklist,omitempty"`
	Vbi          *int64                        `protobuf:"varint,14,opt,name=vbi" json:"vbi,omitempty"`
}

func (x *UploadBlockEndReqV3) Reset() {
	*x = UploadBlockEndReqV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockEndReqV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockEndReqV3) ProtoMessage() {}

func (x *UploadBlockEndReqV3) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockEndReqV3.ProtoReflect.Descriptor instead.
func (*UploadBlockEndReqV3) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{12}
}

func (x *UploadBlockEndReqV3) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadBlockEndReqV3) GetKeyNumber() int32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

func (x *UploadBlockEndReqV3) GetVHB() []byte {
	if x != nil {
		return x.VHB
	}
	return nil
}

func (x *UploadBlockEndReqV3) GetKEU() []byte {
	if x != nil {
		return x.KEU
	}
	return nil
}

func (x *UploadBlockEndReqV3) GetKED() []byte {
	if x != nil {
		return x.KED
	}
	return nil
}

func (x *UploadBlockEndReqV3) GetOriginalSize() int64 {
	if x != nil && x.OriginalSize != nil {
		return *x.OriginalSize
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetRealSize() int32 {
	if x != nil && x.RealSize != nil {
		return *x.RealSize
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetVNU() string {
	if x != nil && x.VNU != nil {
		return *x.VNU
	}
	return ""
}

func (x *UploadBlockEndReqV3) GetAR() int32 {
	if x != nil && x.AR != nil {
		return *x.AR
	}
	return 0
}

func (x *UploadBlockEndReqV3) GetOklist() []*UploadBlockEndReqV3_OkList {
	if x != nil {
		return x.Oklist
	}
	return nil
}

func (x *UploadBlockEndReqV3) GetVbi() int64 {
	if x != nil && x.Vbi != nil {
		return *x.Vbi
	}
	return 0
}

type CheckBlockDupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	VHP       []byte  `protobuf:"bytes,4,opt,name=VHP" json:"VHP,omitempty"`
}

func (x *CheckBlockDupReq) Reset() {
	*x = CheckBlockDupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBlockDupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlockDupReq) ProtoMessage() {}

func (x *CheckBlockDupReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlockDupReq.ProtoReflect.Descriptor instead.
func (*CheckBlockDupReq) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{13}
}

func (x *CheckBlockDupReq) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *CheckBlockDupReq) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *CheckBlockDupReq) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *CheckBlockDupReq) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

type UploadBlockInitReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32                   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string                   `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32                   `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	VHP       []byte                    `protobuf:"bytes,4,opt,name=VHP" json:"VHP,omitempty"`
	Vnu       *UploadBlockInitReqV2_VNU `protobuf:"group,5,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	Id        *uint32                   `protobuf:"varint,6,opt,name=id" json:"id,omitempty"`
	Version   *string                   `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
}

func (x *UploadBlockInitReqV2) Reset() {
	*x = UploadBlockInitReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockInitReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockInitReqV2) ProtoMessage() {}

func (x *UploadBlockInitReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockInitReqV2.ProtoReflect.Descriptor instead.
func (*UploadBlockInitReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{14}
}

func (x *UploadBlockInitReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadBlockInitReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadBlockInitReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadBlockInitReqV2) GetVHP() []byte {
	if x != nil {
		return x.VHP
	}
	return nil
}

func (x *UploadBlockInitReqV2) GetVnu() *UploadBlockInitReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadBlockInitReqV2) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UploadBlockInitReqV2) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type UploadObjectEndReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32                   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string                   `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32                   `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	Vnu       *UploadObjectEndReqV2_VNU `protobuf:"group,4,opt,name=VNU,json=vnu" json:"vnu,omitempty"`
	VHW       []byte                    `protobuf:"bytes,5,opt,name=VHW" json:"VHW,omitempty"`
}

func (x *UploadObjectEndReqV2) Reset() {
	*x = UploadObjectEndReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadObjectEndReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadObjectEndReqV2) ProtoMessage() {}

func (x *UploadObjectEndReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadObjectEndReqV2.ProtoReflect.Descriptor instead.
func (*UploadObjectEndReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{15}
}

func (x *UploadObjectEndReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadObjectEndReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadObjectEndReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadObjectEndReqV2) GetVnu() *UploadObjectEndReqV2_VNU {
	if x != nil {
		return x.Vnu
	}
	return nil
}

func (x *UploadObjectEndReqV2) GetVHW() []byte {
	if x != nil {
		return x.VHW
	}
	return nil
}

type UploadObjectInitReqV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	SignData  *string `protobuf:"bytes,2,opt,name=signData" json:"signData,omitempty"`
	KeyNumber *uint32 `protobuf:"varint,3,opt,name=keyNumber" json:"keyNumber,omitempty"`
	VHW       []byte  `protobuf:"bytes,4,opt,name=VHW" json:"VHW,omitempty"`
	Length    *uint64 `protobuf:"varint,5,opt,name=length" json:"length,omitempty"`
}

func (x *UploadObjectInitReqV2) Reset() {
	*x = UploadObjectInitReqV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadObjectInitReqV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadObjectInitReqV2) ProtoMessage() {}

func (x *UploadObjectInitReqV2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadObjectInitReqV2.ProtoReflect.Descriptor instead.
func (*UploadObjectInitReqV2) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{16}
}

func (x *UploadObjectInitReqV2) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UploadObjectInitReqV2) GetSignData() string {
	if x != nil && x.SignData != nil {
		return *x.SignData
	}
	return ""
}

func (x *UploadObjectInitReqV2) GetKeyNumber() uint32 {
	if x != nil && x.KeyNumber != nil {
		return *x.KeyNumber
	}
	return 0
}

func (x *UploadObjectInitReqV2) GetVHW() []byte {
	if x != nil {
		return x.VHW
	}
	return nil
}

func (x *UploadObjectInitReqV2) GetLength() uint64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

type ActiveCacheV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *ActiveCacheV2_VNU) Reset() {
	*x = ActiveCacheV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveCacheV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveCacheV2_VNU) ProtoMessage() {}

func (x *ActiveCacheV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveCacheV2_VNU.ProtoReflect.Descriptor instead.
func (*ActiveCacheV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ActiveCacheV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *ActiveCacheV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *ActiveCacheV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *ActiveCacheV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type DownloadFileReqV2_VersionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *DownloadFileReqV2_VersionId) Reset() {
	*x = DownloadFileReqV2_VersionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReqV2_VersionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReqV2_VersionId) ProtoMessage() {}

func (x *DownloadFileReqV2_VersionId) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReqV2_VersionId.ProtoReflect.Descriptor instead.
func (*DownloadFileReqV2_VersionId) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DownloadFileReqV2_VersionId) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *DownloadFileReqV2_VersionId) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *DownloadFileReqV2_VersionId) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *DownloadFileReqV2_VersionId) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadBlockDBReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadBlockDBReqV2_VNU) Reset() {
	*x = UploadBlockDBReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockDBReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockDBReqV2_VNU) ProtoMessage() {}

func (x *UploadBlockDBReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockDBReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadBlockDBReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UploadBlockDBReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadBlockDBReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadBlockDBReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadBlockDBReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadBlockDupReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadBlockDupReqV2_VNU) Reset() {
	*x = UploadBlockDupReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockDupReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockDupReqV2_VNU) ProtoMessage() {}

func (x *UploadBlockDupReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockDupReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadBlockDupReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UploadBlockDupReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadBlockDupReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadBlockDupReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadBlockDupReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadBlockEndReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadBlockEndReqV2_VNU) Reset() {
	*x = UploadBlockEndReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockEndReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockEndReqV2_VNU) ProtoMessage() {}

func (x *UploadBlockEndReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockEndReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadBlockEndReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UploadBlockEndReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadBlockEndReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadBlockEndReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadBlockEndReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadBlockEndReqV2_OkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SHARDID *int32  `protobuf:"varint,1,opt,name=SHARDID" json:"SHARDID,omitempty"`
	NODEID  *int32  `protobuf:"varint,2,opt,name=NODEID" json:"NODEID,omitempty"`
	VHF     []byte  `protobuf:"bytes,3,opt,name=VHF" json:"VHF,omitempty"`
	DNSIGN  *string `protobuf:"bytes,4,opt,name=DNSIGN" json:"DNSIGN,omitempty"`
}

func (x *UploadBlockEndReqV2_OkList) Reset() {
	*x = UploadBlockEndReqV2_OkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockEndReqV2_OkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockEndReqV2_OkList) ProtoMessage() {}

func (x *UploadBlockEndReqV2_OkList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockEndReqV2_OkList.ProtoReflect.Descriptor instead.
func (*UploadBlockEndReqV2_OkList) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{11, 1}
}

func (x *UploadBlockEndReqV2_OkList) GetSHARDID() int32 {
	if x != nil && x.SHARDID != nil {
		return *x.SHARDID
	}
	return 0
}

func (x *UploadBlockEndReqV2_OkList) GetNODEID() int32 {
	if x != nil && x.NODEID != nil {
		return *x.NODEID
	}
	return 0
}

func (x *UploadBlockEndReqV2_OkList) GetVHF() []byte {
	if x != nil {
		return x.VHF
	}
	return nil
}

func (x *UploadBlockEndReqV2_OkList) GetDNSIGN() string {
	if x != nil && x.DNSIGN != nil {
		return *x.DNSIGN
	}
	return ""
}

type UploadBlockEndReqV3_OkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SHARDID *int32  `protobuf:"varint,1,opt,name=SHARDID" json:"SHARDID,omitempty"`
	NODEID  *int32  `protobuf:"varint,2,opt,name=NODEID" json:"NODEID,omitempty"`
	VHF     []byte  `protobuf:"bytes,3,opt,name=VHF" json:"VHF,omitempty"`
	DNSIGN  *string `protobuf:"bytes,4,opt,name=DNSIGN" json:"DNSIGN,omitempty"`
	NODEID2 *int32  `protobuf:"varint,5,opt,name=NODEID2" json:"NODEID2,omitempty"`
	DNSIGN2 *string `protobuf:"bytes,6,opt,name=DNSIGN2" json:"DNSIGN2,omitempty"`
}

func (x *UploadBlockEndReqV3_OkList) Reset() {
	*x = UploadBlockEndReqV3_OkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockEndReqV3_OkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockEndReqV3_OkList) ProtoMessage() {}

func (x *UploadBlockEndReqV3_OkList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockEndReqV3_OkList.ProtoReflect.Descriptor instead.
func (*UploadBlockEndReqV3_OkList) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UploadBlockEndReqV3_OkList) GetSHARDID() int32 {
	if x != nil && x.SHARDID != nil {
		return *x.SHARDID
	}
	return 0
}

func (x *UploadBlockEndReqV3_OkList) GetNODEID() int32 {
	if x != nil && x.NODEID != nil {
		return *x.NODEID
	}
	return 0
}

func (x *UploadBlockEndReqV3_OkList) GetVHF() []byte {
	if x != nil {
		return x.VHF
	}
	return nil
}

func (x *UploadBlockEndReqV3_OkList) GetDNSIGN() string {
	if x != nil && x.DNSIGN != nil {
		return *x.DNSIGN
	}
	return ""
}

func (x *UploadBlockEndReqV3_OkList) GetNODEID2() int32 {
	if x != nil && x.NODEID2 != nil {
		return *x.NODEID2
	}
	return 0
}

func (x *UploadBlockEndReqV3_OkList) GetDNSIGN2() string {
	if x != nil && x.DNSIGN2 != nil {
		return *x.DNSIGN2
	}
	return ""
}

type UploadBlockInitReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadBlockInitReqV2_VNU) Reset() {
	*x = UploadBlockInitReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBlockInitReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlockInitReqV2_VNU) ProtoMessage() {}

func (x *UploadBlockInitReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlockInitReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadBlockInitReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{14, 0}
}

func (x *UploadBlockInitReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadBlockInitReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadBlockInitReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadBlockInitReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

type UploadObjectEndReqV2_VNU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MachineIdentifier *int32  `protobuf:"varint,2,opt,name=machineIdentifier" json:"machineIdentifier,omitempty"`
	ProcessIdentifier *uint32 `protobuf:"varint,3,opt,name=processIdentifier" json:"processIdentifier,omitempty"`
	Counter           *int32  `protobuf:"varint,4,opt,name=counter" json:"counter,omitempty"`
}

func (x *UploadObjectEndReqV2_VNU) Reset() {
	*x = UploadObjectEndReqV2_VNU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_v2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadObjectEndReqV2_VNU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadObjectEndReqV2_VNU) ProtoMessage() {}

func (x *UploadObjectEndReqV2_VNU) ProtoReflect() protoreflect.Message {
	mi := &file_msg_v2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadObjectEndReqV2_VNU.ProtoReflect.Descriptor instead.
func (*UploadObjectEndReqV2_VNU) Descriptor() ([]byte, []int) {
	return file_msg_v2_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UploadObjectEndReqV2_VNU) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *UploadObjectEndReqV2_VNU) GetMachineIdentifier() int32 {
	if x != nil && x.MachineIdentifier != nil {
		return *x.MachineIdentifier
	}
	return 0
}

func (x *UploadObjectEndReqV2_VNU) GetProcessIdentifier() uint32 {
	if x != nil && x.ProcessIdentifier != nil {
		return *x.ProcessIdentifier
	}
	return 0
}

func (x *UploadObjectEndReqV2_VNU) GetCounter() int32 {
	if x != nil && x.Counter != nil {
		return *x.Counter
	}
	return 0
}

var File_msg_v2_proto protoreflect.FileDescriptor

var file_msg_v2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x70, 0x6b, 0x74, 0x22, 0xa7, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65,
	0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0a, 0x32, 0x16, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x32, 0x2e, 0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e,
	0x75, 0x1a, 0x99, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x7c, 0x0a,
	0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x42, 0x49,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x56, 0x42, 0x49, 0x22, 0x83, 0x03, 0x0a, 0x11,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x56,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0a, 0x32, 0x20, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x56, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x1a,
	0x9f, 0x01, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x22, 0x7d, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x56, 0x48, 0x57, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x57,
	0x22, 0x97, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b,
	0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x0e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x56, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x03, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x42, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x1b, 0x2e,
	0x70, 0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x42, 0x52, 0x65, 0x71, 0x56, 0x32, 0x2e, 0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12,
	0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48,
	0x50, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x42, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x56, 0x48, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x55, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x4b, 0x45, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x4b, 0x45, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x99, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0xb9, 0x03, 0x0a, 0x13,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0a, 0x32, 0x1c, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70, 0x52, 0x65, 0x71, 0x56, 0x32, 0x2e, 0x56, 0x4e, 0x55,
	0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x42, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x55,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x45, 0x55, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x03,
	0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x8c, 0x05, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x56, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x56, 0x48, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x42, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x56, 0x48, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x55, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x4b, 0x45, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x45, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x76, 0x6e, 0x75,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x1c, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x56, 0x32,
	0x2e, 0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x52, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x41, 0x52, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x1f, 0x2e, 0x70, 0x6b, 0x74, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x56, 0x32, 0x2e, 0x4f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x62, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x76, 0x62, 0x69, 0x1a, 0x99, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x1a, 0x64, 0x0a, 0x06, 0x4f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x48,
	0x41, 0x52, 0x44, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x48, 0x41,
	0x52, 0x44, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x4f, 0x44, 0x45, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x4f, 0x44, 0x45, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x48, 0x46, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x46, 0x12, 0x16,
	0x0a, 0x06, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x22, 0x87, 0x04, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x56, 0x33, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56,
	0x48, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x42, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x56, 0x48, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x55, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x4b, 0x45, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x45, 0x44, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x45, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x0e, 0x0a, 0x02, 0x41, 0x52,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x41, 0x52, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x1f, 0x2e, 0x70, 0x6b, 0x74,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x56, 0x33, 0x2e, 0x4f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6f, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x62, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x76, 0x62, 0x69, 0x1a, 0x98, 0x01, 0x0a, 0x06, 0x4f, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x52, 0x44, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x53, 0x48, 0x41, 0x52, 0x44, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x4f,
	0x44, 0x45, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x4f, 0x44, 0x45,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x46, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x56, 0x48, 0x46, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x4f, 0x44, 0x45, 0x49, 0x44, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4e,
	0x4f, 0x44, 0x45, 0x49, 0x44, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e,
	0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x32,
	0x22, 0x76, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x50, 0x22, 0xf1, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x56,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x56, 0x48, 0x50, 0x12, 0x2f, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0a, 0x32, 0x1d, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32, 0x2e, 0x56, 0x4e,
	0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x99, 0x01, 0x0a, 0x03, 0x56, 0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0xc7, 0x02, 0x0a,
	0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65,
	0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x03, 0x76, 0x6e, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0a, 0x32, 0x1d, 0x2e, 0x70, 0x6b, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x56, 0x32, 0x2e,
	0x56, 0x4e, 0x55, 0x52, 0x03, 0x76, 0x6e, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x57, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x56, 0x48, 0x57, 0x1a, 0x99, 0x01, 0x0a, 0x03, 0x56,
	0x4e, 0x55, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x56, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x48, 0x57, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x56, 0x48, 0x57, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
}

var (
	file_msg_v2_proto_rawDescOnce sync.Once
	file_msg_v2_proto_rawDescData = file_msg_v2_proto_rawDesc
)

func file_msg_v2_proto_rawDescGZIP() []byte {
	file_msg_v2_proto_rawDescOnce.Do(func() {
		file_msg_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_v2_proto_rawDescData)
	})
	return file_msg_v2_proto_rawDescData
}

var file_msg_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_msg_v2_proto_goTypes = []interface{}{
	(*ActiveCacheV2)(nil),               // 0: pkt.ActiveCacheV2
	(*DownloadBlockInitReqV2)(nil),      // 1: pkt.DownloadBlockInitReqV2
	(*DownloadFileReqV2)(nil),           // 2: pkt.DownloadFileReqV2
	(*DownloadObjectInitReqV2)(nil),     // 3: pkt.DownloadObjectInitReqV2
	(*PreAllocNodeReqV2)(nil),           // 4: pkt.PreAllocNodeReqV2
	(*QueryUserReqV2)(nil),              // 5: pkt.QueryUserReqV2
	(*SyncUserReq)(nil),                 // 6: pkt.SyncUserReq
	(*RegUserReqV2)(nil),                // 7: pkt.RegUserReqV2
	(*RegUserReqV3)(nil),                // 8: pkt.RegUserReqV3
	(*UploadBlockDBReqV2)(nil),          // 9: pkt.UploadBlockDBReqV2
	(*UploadBlockDupReqV2)(nil),         // 10: pkt.UploadBlockDupReqV2
	(*UploadBlockEndReqV2)(nil),         // 11: pkt.UploadBlockEndReqV2
	(*UploadBlockEndReqV3)(nil),         // 12: pkt.UploadBlockEndReqV3
	(*CheckBlockDupReq)(nil),            // 13: pkt.CheckBlockDupReq
	(*UploadBlockInitReqV2)(nil),        // 14: pkt.UploadBlockInitReqV2
	(*UploadObjectEndReqV2)(nil),        // 15: pkt.UploadObjectEndReqV2
	(*UploadObjectInitReqV2)(nil),       // 16: pkt.UploadObjectInitReqV2
	(*ActiveCacheV2_VNU)(nil),           // 17: pkt.ActiveCacheV2.VNU
	(*DownloadFileReqV2_VersionId)(nil), // 18: pkt.DownloadFileReqV2.VersionId
	(*UploadBlockDBReqV2_VNU)(nil),      // 19: pkt.UploadBlockDBReqV2.VNU
	(*UploadBlockDupReqV2_VNU)(nil),     // 20: pkt.UploadBlockDupReqV2.VNU
	(*UploadBlockEndReqV2_VNU)(nil),     // 21: pkt.UploadBlockEndReqV2.VNU
	(*UploadBlockEndReqV2_OkList)(nil),  // 22: pkt.UploadBlockEndReqV2.OkList
	(*UploadBlockEndReqV3_OkList)(nil),  // 23: pkt.UploadBlockEndReqV3.OkList
	(*UploadBlockInitReqV2_VNU)(nil),    // 24: pkt.UploadBlockInitReqV2.VNU
	(*UploadObjectEndReqV2_VNU)(nil),    // 25: pkt.UploadObjectEndReqV2.VNU
}
var file_msg_v2_proto_depIdxs = []int32{
	17, // 0: pkt.ActiveCacheV2.vnu:type_name -> pkt.ActiveCacheV2.VNU
	18, // 1: pkt.DownloadFileReqV2.versionid:type_name -> pkt.DownloadFileReqV2.VersionId
	19, // 2: pkt.UploadBlockDBReqV2.vnu:type_name -> pkt.UploadBlockDBReqV2.VNU
	20, // 3: pkt.UploadBlockDupReqV2.vnu:type_name -> pkt.UploadBlockDupReqV2.VNU
	21, // 4: pkt.UploadBlockEndReqV2.vnu:type_name -> pkt.UploadBlockEndReqV2.VNU
	22, // 5: pkt.UploadBlockEndReqV2.oklist:type_name -> pkt.UploadBlockEndReqV2.OkList
	23, // 6: pkt.UploadBlockEndReqV3.oklist:type_name -> pkt.UploadBlockEndReqV3.OkList
	24, // 7: pkt.UploadBlockInitReqV2.vnu:type_name -> pkt.UploadBlockInitReqV2.VNU
	25, // 8: pkt.UploadObjectEndReqV2.vnu:type_name -> pkt.UploadObjectEndReqV2.VNU
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_msg_v2_proto_init() }
func file_msg_v2_proto_init() {
	if File_msg_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCacheV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBlockInitReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadObjectInitReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreAllocNodeReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegUserReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegUserReqV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockDBReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockDupReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockEndReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockEndReqV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBlockDupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockInitReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadObjectEndReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadObjectInitReqV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveCacheV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReqV2_VersionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockDBReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockDupReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockEndReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockEndReqV2_OkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockEndReqV3_OkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBlockInitReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_v2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadObjectEndReqV2_VNU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_v2_proto_goTypes,
		DependencyIndexes: file_msg_v2_proto_depIdxs,
		MessageInfos:      file_msg_v2_proto_msgTypes,
	}.Build()
	File_msg_v2_proto = out.File
	file_msg_v2_proto_rawDesc = nil
	file_msg_v2_proto_goTypes = nil
	file_msg_v2_proto_depIdxs = nil
}
